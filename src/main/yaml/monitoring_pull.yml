version: '3.8'

networks:
  service_mesh_ingress:
    external: true

volumes:
  prometheus: {}
  grafana: {}
  alertmanager: {}

configs:
  dockerd:
    file: ../resources/dockerd-exporter/Caddyfile
  node_rules:
    file: ../resources/prometheus/rules/swarm-node.rules.yml
  task_rules:
    file: ../resources/prometheus/rules/swarm-task.rules.yml

services:
  dockerd-exporter:
    image: stefanprodan/caddy
    networks: &default_networks
      - service_mesh_ingress
    environment:
      DOCKER_GWBRIDGE_IP: '172.18.0.1'
    configs:
      - source: dockerd
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      restart_policy: &default_restart_policy
        max_attempts: 5
        delay: '15s'
        window: '15s'
        condition: on-failure
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  cadvisor:
    image: google/cadvisor
    command: -logtostderr -docker_only
    networks: *default_networks
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      restart_policy: *default_restart_policy
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: stefanprodan/swarmprom-grafana:5.3.4
    networks: *default_networks
    environment:
      GF_SECURITY_ADMIN_USER: hiberbee
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_USERS_ALLOW_SIGN_UP: 'false'
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: *default_restart_policy
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        traefik.enable: 'true'
        traefik.port: 3000
        traefik.frontend.rule: 'Host:grafana.localhost'

  alertmanager:
    image: stefanprodan/swarmprom-alertmanager:v0.14.0
    networks: *default_networks
    environment:
      SLACK_URL: ${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      SLACK_CHANNEL: ${SLACK_CHANNEL:-general}
      SLACK_USER: ${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: *default_restart_policy
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        traefik.enable: 'true'
        traefik.port: 9093
        traefik.frontend.rule: 'Host:alertmanager.localhost'

  unsee:
    image: cloudflare/unsee:v0.8.0
    networks: *default_networks
    environment:
      ALERTMANAGER_URIS: default:http://alertmanager:9093
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: *default_restart_policy

  node-exporter:
    image: stefanprodan/swarmprom-node-exporter:v0.16.0
    networks: *default_networks
    environment:
      NODE_ID: '{{.Node.ID}}'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      restart_policy: *default_restart_policy
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: stefanprodan/swarmprom-prometheus:v2.5.0
    networks: *default_networks
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=${PROMETHEUS_RETENTION:-24h}'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm-node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm-task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: *default_restart_policy
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      labels:
        traefik.enable: 'true'
        traefik.port: 9090
        traefik.frontend.rule: 'Host:prometheus.localhost'
